name: Deploy to Azure App Service

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build

    - name: Verify build structure
      run: |
        echo "Build output:"
        ls -la .next/
        echo "Standalone content:"
        ls -la .next/standalone/ || echo "No standalone dir"

    - name: Create deployment package
      run: |
        # Create deployment directory
        mkdir -p deployment
        
        # Copy standalone files
        cp -R .next/standalone/* deployment/
        
        # Copy static files (they might be in standalone already, but just in case)
        if [ -d ".next/static" ]; then
          mkdir -p deployment/.next/static
          cp -R .next/static/* deployment/.next/static/
        fi
        
        # Copy public files
        if [ -d "public" ]; then
          mkdir -p deployment/public
          cp -R public/* deployment/public/
        fi
        
        # Create PRODUCTION package.json with correct start script
        cat > deployment/package.json << 'EOF'
        {
          "name": "tasksystems-ng-production",
          "version": "1.0.0",
          "scripts": {
            "start": "node server.js"
          }
        }
        EOF
        
        # Verify deployment package
        echo "Deployment package contents:"
        ls -la deployment/
        [ -f "deployment/server.js" ] && echo "✓ server.js found" || echo "✗ server.js missing"

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: azure-app
        path: deployment/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: azure-app
        path: .

    - name: Verify deployment files
      run: |
        echo "Files to be deployed:"
        ls -la
        [ -f "server.js" ] && echo "✓ server.js present" || echo "✗ server.js missing"
        [ -f "package.json" ] && echo "✓ package.json present" || echo "✗ package.json missing"
        cat package.json

    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v3
      with:
        app-name: 'task-site-ng'
        slot-name: 'Production'
        package: .
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}